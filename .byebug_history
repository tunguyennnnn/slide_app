continue
css
continue
@text_block
continue
params
continue
params
continue
params
params["css"].each do |key, value| print key end
params["css"].each do |key, value|
params["css"]
params
continue
JSON.parse(a)
a = TextBlock.first.text_block_css
TextBlock.first.text_block_css
TextBlock.first
params
continue
params
continue
@new_block
@new_block.to_s
continue
@new_block.as_json.select{|key, value|}
@new_block.as_json
@new_block.class
@new_block.select { |key, value|}
@new_block.only
@new_block.map
@new_block.select
@new_block.to_json
@new_block.json
@new_block
continue
TextBlock
{x:3}.to_json
JSON.parse({x:3}.to_json)
JSON.parse({x:3}.to_s)
JSON.parse {x:3}.to
{x:3}.to_s
TextBlock
params
continue
@slide.slide_css
continue
params[:css].to_s
params[:css].class
params
continue
params[:css]
params
continue
Rails.application.routes.url_for({project: project)
self.project
continue
Project
Project.first.slides.first.project
Project.first.slides.first.projects
Project.first.slides.first.project
Project.first.slides.first
Project.first.slides
Project.first
self.slides
self.class
self
slide
project
Rails.application.routes.url_for(self)
Rails.application.routes.url_for([self])
self.project
self
self.project
self
Rails.application.routes.url_for([project, self])
Rails.application.routes.url_for([project, sel]f)
Rails.application.routes.url_for(project, self)
Rails.application.routes.url_for
Rails.application.routes
url
url_for
continue
@project.slides
@project
@slides
json
continue
@slides
@slides[0]
json
continue
json
continue
json
continue
json[:slides]
json
continue
skip
slide
continue
skip
params
continue
quit
kill
next
params
exit
skip
